),
#Create player position columns
GS = colDef(
name = "GS",
cell = function(value) {
div(class = "player-name", value)
},
width = 200
),
GA = colDef(
name = "GA",
cell = function(value) {
div(class = "player-name", value)
},
width = 200
),
WA = colDef(
name = "WA",
cell = function(value) {
div(class = "player-name", value)
},
width = 200
),
C = colDef(
name = "C",
cell = function(value) {
div(class = "player-name", value)
},
width = 200
),
WD = colDef(
name = "WD",
cell = function(value) {
div(class = "player-name", value)
},
width = 200
),
GD = colDef(
name = "GD",
cell = function(value) {
div(class = "player-name", value)
},
width = 200
),
GK = colDef(
name = "GK",
cell = function(value) {
div(class = "player-name", value)
},
width = 200
),
#Add duration column
duration = colDef(
name = "Minutes Played",
cell = function(value) {
width <- paste0(value * 100 / max(data$duration), "%")
value <- format(round(value, 2), nsmall = 2)
value <- format(value, width = 10, justify = "right")
bar <- div(
class = "bar-duration",
style = list(marginRight = "6px"),
div(class = "bar", style = list(width = width, backgroundColor = "#ee255c"))
)
div(class = "bar-cell", span(class = "number", value), bar)
}
),
#Add absolute plus minus column
absPlusMinus = colDef(
name = "Absolute +/-",
cell = function(value) {
width = paste0(value * 100 / max(data$absPlusMinus), "%")
label = paste0(round(value * 100))
bar_chart_pos_neg(label, value)
},
align = "center",
minWidth = 400
),
#Add per plus minus column
per15PlusMinus = colDef(
name = "Per 15 Min. +/-",
cell = function(value) {
width = paste0(value * 100 / max(data$per15PlusMinus), "%")
label = format(round(value, 2), nsmall = 2)
bar_chart_pos_neg(label, value)
},
align = "center",
minWidth = 400
)
), #end columns list
#Set reactable options
compact = FALSE,
showSortIcon = FALSE,
borderless = TRUE,
class = "plusMinus-tbl"
) #end reactable
#Set table options
div(class = "lineUp-plusMinus",
div(class = "lineUp-plusMinus-header",
h2(class = "lineUp-plusMinus-title", "Plus/Minus Data from Team Super Netball 2020 Line-Ups"),
"Score differential (absolute and per 15 minutes) for line-ups deployed by each team (minimum 10 mins duration played)"
),
tbl
)
#Set the libPath to the conda environment
.libPaths("C:/Users/aafox/AppData/Local/Continuum/anaconda3/envs/super_netball_analysis_r/Lib/R/library")
knitr::opts_chunk$set(echo = FALSE)
#Load libraries
library(reactable)
library(htmltools)
#Read in data
data <- read.csv("teamLineUps_plusMinus.csv", stringsAsFactors = FALSE)
View(data)
paste("cell number", class)
#Load libraries
library(reactable)
library(htmltools)
#Read in data
data <- read.csv("teamLineUps_plusMinus.csv", stringsAsFactors = FALSE)
#Create function for colour mapping
make_color_pal <- function(colors, bias = 1) {
get_color <- colorRamp(colors, bias = bias)
function(x) rgb(get_color(x), maxColorValue = 255)
}
#Create plus minus colour map
plusMinus_colour <- make_color_pal(c("#dc9195", "#e3a9ab", "#e9c1c2", "#edd9d9", "#f1f1f1","#d7e9d9","#bde0c3","#a2d8ac","#86cf96"), bias = 2)
#Create table
lineUp_plusMinus_tbl <- reactable(
#Set data
data,
#Set pagination
pagination = TRUE,
defaultPageSize = 20,
#Set parameters
highlight = TRUE,
#Set the default sort colum
defaultSorted = "per15PlusMinus",
defaultSortOrder = "desc",
#Set column groups
defaultColGroup = colGroup(headerClass = "group-header"),
columnGroups = list(
colGroup(name = "Players", columns = c("GS","GA","WA","C","WD","GD","GK")),
colGroup(name = "Plus/Minus", columns = c("absPlusMinus","per15PlusMinus"))
),
#Set default column parameters
defaultColDef = colDef(headerClass = "header", align = "left"),
#Create a list of the columns
columns = list(
#Create the team column
team = colDef(
name = "Team",
style = list(fontSize = "12px", fontWeight = "bold"),
cell = function(value) {
div(class = "team",
img(class = "logo", alt = paste(value, "logo"), src = sprintf("Images/%s.png", value))
#div(class = "team-name", value)
)
},
minWidth = 25
),
#Create player position columns
GS = colDef(
name = "GS",
defaultSortOrder = "asc",
align = "center",
maxWidth = 100,
class = "cell group",
headerStyle = list(fontWeight = 700),
style = list(fontSize = "14px"),
cell = function(value) {
div(class = "player-name", value)
},
),
GA = colDef(
name = "GA",
defaultSortOrder = "asc",
align = "center",
maxWidth = 100,
class = "cell group",
headerStyle = list(fontWeight = 700),
style = list(fontSize = "14px"),
cell = function(value) {
div(class = "player-name", value)
},
),
WA = colDef(
name = "WA",
defaultSortOrder = "asc",
align = "center",
maxWidth = 100,
class = "cell group",
headerStyle = list(fontWeight = 700),
style = list(fontSize = "14px"),
cell = function(value) {
div(class = "player-name", value)
},
),
C = colDef(
name = "C",
defaultSortOrder = "asc",
align = "center",
maxWidth = 100,
class = "cell group",
headerStyle = list(fontWeight = 700),
style = list(fontSize = "14px"),
cell = function(value) {
div(class = "player-name", value)
},
),
WD = colDef(
name = "WD",
defaultSortOrder = "asc",
align = "center",
maxWidth = 100,
class = "cell group",
headerStyle = list(fontWeight = 700),
style = list(fontSize = "14px"),
cell = function(value) {
div(class = "player-name", value)
},
),
GD = colDef(
name = "GD",
defaultSortOrder = "asc",
align = "center",
maxWidth = 100,
class = "cell group",
headerStyle = list(fontWeight = 700),
style = list(fontSize = "14px"),
cell = function(value) {
div(class = "player-name", value)
},
),
GK = colDef(
name = "GK",
defaultSortOrder = "asc",
align = "center",
maxWidth = 100,
class = "cell group",
headerStyle = list(fontWeight = 700),
style = list(fontSize = "14px"),
cell = function(value) {
div(class = "player-name", value)
},
),
#Add duration column
duration = colDef(
name = "Minutes Played",
maxWidth = 55,
align = "center",
class = "cell number",
format = colFormat(digits = 1)
# cell = function(value) {
#   value <- format(round(value, 2), nsmall = 2)
#   value <- format(value, width = 9, justify = "right")
#
# }
),
#Add absolute plus minus column
absPlusMinus = colDef(
name = "Absolute +/-",
maxWidth = 70,
defaultSortOrder = "desc",
#class = paste("cell number", class),
cell = function(value) {
scaled <- (value - min(data$absPlusMinus)) / (max(data$absPlusMinus) - min(data$absPlusMinus))
color <- plusMinus_colour(scaled)
value <- format(round(value, 2), nsmall = 2)
style = div(list(background = color), value)
}
),
#Add per plus minus column
perPlusMinus = colDef(
name = "Per 15 Min. +/-",
maxWidth = 70,
defaultSortOrder = "desc",
#class = paste("cell number", class),
cell = function(value) {
scaled <- (value - min(data$per15PlusMinus)) / (max(data$per15PlusMinus) - min(data$per15PlusMinus))
color <- plusMinus_colour(scaled)
value <- format(round(value, 2), nsmall = 2)
style = div(list(background = color), value)
}
)
), #end columns list
#Set reactable options
compact = FALSE,
showSortIcon = FALSE,
borderless = TRUE,
class = "plusMinus-tbl"
) #end reactable
#Create table
lineUp_plusMinus_tbl <- reactable(
#Set data
data,
#Set pagination
pagination = TRUE,
defaultPageSize = 20,
#Set parameters
highlight = TRUE,
#Set the default sort colum
defaultSorted = "per15PlusMinus",
defaultSortOrder = "desc",
#Set column groups
defaultColGroup = colGroup(headerClass = "group-header"),
columnGroups = list(
colGroup(name = "Players", columns = c("GS","GA","WA","C","WD","GD","GK")),
colGroup(name = "Plus/Minus", columns = c("absPlusMinus","per15PlusMinus"))
),
#Set default column parameters
defaultColDef = colDef(headerClass = "header", align = "left"),
#Create a list of the columns
columns = list(
#Create the team column
team = colDef(
name = "Team",
style = list(fontSize = "12px", fontWeight = "bold"),
cell = function(value) {
div(class = "team",
img(class = "logo", alt = paste(value, "logo"), src = sprintf("Images/%s.png", value))
#div(class = "team-name", value)
)
},
minWidth = 25
),
#Create player position columns
GS = colDef(
name = "GS",
defaultSortOrder = "asc",
align = "center",
maxWidth = 100,
class = "cell group",
headerStyle = list(fontWeight = 700),
style = list(fontSize = "14px"),
cell = function(value) {
div(class = "player-name", value)
},
),
GA = colDef(
name = "GA",
defaultSortOrder = "asc",
align = "center",
maxWidth = 100,
class = "cell group",
headerStyle = list(fontWeight = 700),
style = list(fontSize = "14px"),
cell = function(value) {
div(class = "player-name", value)
},
),
WA = colDef(
name = "WA",
defaultSortOrder = "asc",
align = "center",
maxWidth = 100,
class = "cell group",
headerStyle = list(fontWeight = 700),
style = list(fontSize = "14px"),
cell = function(value) {
div(class = "player-name", value)
},
),
C = colDef(
name = "C",
defaultSortOrder = "asc",
align = "center",
maxWidth = 100,
class = "cell group",
headerStyle = list(fontWeight = 700),
style = list(fontSize = "14px"),
cell = function(value) {
div(class = "player-name", value)
},
),
WD = colDef(
name = "WD",
defaultSortOrder = "asc",
align = "center",
maxWidth = 100,
class = "cell group",
headerStyle = list(fontWeight = 700),
style = list(fontSize = "14px"),
cell = function(value) {
div(class = "player-name", value)
},
),
GD = colDef(
name = "GD",
defaultSortOrder = "asc",
align = "center",
maxWidth = 100,
class = "cell group",
headerStyle = list(fontWeight = 700),
style = list(fontSize = "14px"),
cell = function(value) {
div(class = "player-name", value)
},
),
GK = colDef(
name = "GK",
defaultSortOrder = "asc",
align = "center",
maxWidth = 100,
class = "cell group",
headerStyle = list(fontWeight = 700),
style = list(fontSize = "14px"),
cell = function(value) {
div(class = "player-name", value)
},
),
#Add duration column
duration = colDef(
name = "Minutes Played",
maxWidth = 55,
align = "center",
class = "cell number",
format = colFormat(digits = 1)
# cell = function(value) {
#   value <- format(round(value, 2), nsmall = 2)
#   value <- format(value, width = 9, justify = "right")
#
# }
),
#Add absolute plus minus column
absPlusMinus = colDef(
name = "Absolute +/-",
maxWidth = 70,
defaultSortOrder = "desc",
#class = paste("cell number", class),
cell = function(value) {
scaled <- (value - min(data$absPlusMinus)) / (max(data$absPlusMinus) - min(data$absPlusMinus))
color <- plusMinus_colour(scaled)
value <- format(round(value, 2), nsmall = 2)
style = div(list(background = color), value)
}
),
#Add per plus minus column
per15PlusMinus = colDef(
name = "Per 15 Min. +/-",
maxWidth = 70,
defaultSortOrder = "desc",
#class = paste("cell number", class),
cell = function(value) {
scaled <- (value - min(data$per15PlusMinus)) / (max(data$per15PlusMinus) - min(data$per15PlusMinus))
color <- plusMinus_colour(scaled)
value <- format(round(value, 2), nsmall = 2)
style = div(list(background = color), value)
}
)
), #end columns list
#Set reactable options
compact = FALSE,
showSortIcon = FALSE,
borderless = TRUE,
class = "plusMinus-tbl"
) #end reactable
(-12 - min(data$per15PlusMinus)) / (max(data$per15PlusMinus) - min(data$per15PlusMinus))
min(data$per15PlusMinus)
(-10.14085 - min(data$per15PlusMinus)) / (max(data$per15PlusMinus) - min(data$per15PlusMinus))
(12.8388017 - min(data$per15PlusMinus)) / (max(data$per15PlusMinus) - min(data$per15PlusMinus))
(-10.1408451 - min(data$per15PlusMinus)) / (max(data$per15PlusMinus) - min(data$per15PlusMinus))
(-10.1408451 - min(data$per15PlusMinus)+0.0001) / (max(data$per15PlusMinus) - min(data$per15PlusMinus)+0.0001)
scaled = -.1
if (scaled < 1) {
scaled = 0
}
#Add function for plus minus column formats
absPlusMinus_column <- function(maxWidth = 125, class = NULL, ...) {
colDef(
cell = format_plusMinus,
maxWidth = maxWidth,
class = paste("cell number", class),
style = function(value) {
scaled <- (value - min(data$absPlusMinus)) / (max(data$absPlusMinus) - min(data$absPlusMinus))
if (scaled < 0) {
scaled = 0
}
color <- plusMinus_colour(scaled)
style = list(color = "#111", background = plusMinus_colour(value))
}
)
}
perPlusMinus_column <- function(maxWidth = 125, class = NULL, ...) {
colDef(
cell = format_plusMinus,
maxWidth = maxWidth,
class = paste("cell number", class),
style = function(value) {
scaled <- (value - min(data$per15PlusMinus)) / (max(data$per15PlusMinus) - min(data$per15PlusMinus))
if (scaled < 0) {
scaled = 0
}
color <- plusMinus_colour(scaled)
style = list(color = "#111", background = plusMinus_colour(value))
}
)
}
col = c("#dc9195", "#e3a9ab", "#e9c1c2", "#edd9d9", "#f1f1f1","#d7e9d9","#bde0c3","#a2d8ac","#86cf96")
get_color <- colorRamp(col, bias = 2)
rgb(get_color(x), maxColorValue = 255)
make_color_pal <- function(colors, bias = 1) {
get_color <- colorRamp(colors, bias = 2)
function(x) rgb(get_color(x), maxColorValue = 255)
}
#Create plus minus colour map
plusMinus_colour <- make_color_pal(c("#dc9195", "#e3a9ab", "#e9c1c2", "#edd9d9", "#f1f1f1","#d7e9d9","#bde0c3","#a2d8ac","#86cf96"), bias = 2)
color <- plusMinus_colour(0)
scaled <- (12.8388017 - min(data$absPlusMinus)) / (max(data$absPlusMinus) - min(data$absPlusMinus))
scaled <- (-10.1408451 - min(data$absPlusMinus)) / (max(data$absPlusMinus) - min(data$absPlusMinus))
scaled <- (27 - min(data$absPlusMinus)) / (max(data$absPlusMinus) - min(data$absPlusMinus))
scaled <- (-12 - min(data$absPlusMinus)) / (max(data$absPlusMinus) - min(data$absPlusMinus))
#Set the libPath to the conda environment
.libPaths("C:/Users/aafox/AppData/Local/Continuum/anaconda3/envs/super_netball_analysis_r/Lib/R/library")
